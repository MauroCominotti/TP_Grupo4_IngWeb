@*@inject HttpClient http*@
@inject IHttpClientFactory _httpClientFicatory;
@inject NavigationManager uriHelper
@*@using System.Net.Http*@

<PostForm ButtonText="Create Developer" post="@post" OnValidSubmit="@CreatePost" />
@*<component type="typeof(PostForm)"
    render-mode="ServerPrerendered"
    param-ButtonText="Create Developer"
    param-post="@post"
    param-OnValidSubmit="@CreatePost()"/>*@

@code {

    [Parameter]
    public string FKUserId { get; set; }

    Post post = new Post();

    protected override async Task OnInitializedAsync()
    {
        post.UserId = FKUserId;
        //todos = await _jsonPlaceHolderClient.GetTodos();
    }

    async Task CreatePost()
    {
        //await HttpClient.PostAsJsonAsync("/Posts/CreatePost", post);

        //var jsonInString = JsonConvert.SerializeObject(post)
        //await http.PostAsync("/Posts/CreatePost", new StringContent(jsonInString, Encoding.UTF8, "application/json"));

        var postItemJson = new StringContent(
        Newtonsoft.Json.JsonConvert.SerializeObject(@post),
        System.Text.Encoding.UTF8,
        "application/json");
        var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:5001/Posts/CreatePost");
        request.Content = postItemJson;
        var httpClient = _httpClientFicatory.CreateClient();
        var response = await httpClient.SendAsync(request);

        //uriHelper.NavigateTo("/Posts/");
    }
}
